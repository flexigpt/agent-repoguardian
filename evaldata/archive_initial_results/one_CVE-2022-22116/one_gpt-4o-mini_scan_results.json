[
  {
    "id": "CVE-2022-22116",
    "scan_type": "before",
    "scan_responses": [
      {
        "code_block": {
          "Primary Functional Area": "API and Functionality Management",
          "Sub Functional Area": "Initialization and Cleanup",
          "Example issues to look for": [
            "Initialization of a Resource with an Insecure Default",
            "Non-exit on Failed Initialization"
          ],
          "Code lines": [
            "\"version\": \"9.4.1\",",
            "\"license\": \"GPL-3.0-only\",",
            "\"homepage\": \"https://github.com/directus/directus#readme\",",
            "\"description\": \"Directus is a real-time API and App dashboard for managing SQL database content.\",",
            "\"keywords\": [",
            "\"name\": \"Monospace Inc\",",
            "\"email\": \"info@monospace.io\",",
            "\"url\": \"https://monospace.io\"",
            "},",
            "{",
            "\"name\": \"Rijk van Zanten\",",
            "\"email\": \"rijkvanzanten@me.com\",",
            "\"url\": \"https://github.com/rijkvanzanten\"",
            "},",
            "\"name\": \"Ben Haynes\",",
            "\"email\": \"ben@rngr.org\",",
            "\"url\": \"https://github.com/benhaynes\"",
            "}"
          ]
        },
        "scan_response": {
          "vuln_score": 1,
          "exploitable_vuln": false,
          "description": "The provided code does not exhibit any explicit security vulnerabilities related to API and functionality management. The initialization of resources appears to be standard and does not show any insecure defaults or failure to exit on initialization errors. The information presented is primarily metadata and does not indicate any exploitable issues."
        }
      },
      {
        "code_block": {
          "Primary Functional Area": "API and Functionality Management",
          "Sub Functional Area": "Data / Function Handling",
          "Example issues to look for": [
            "Invokable Control Element with Excessive File or Data Access Operations",
            "Reliance on Runtime Component in Generated Code",
            "Use of Inherently Dangerous Function",
            "Symbolic Name not Mapping to Correct Object",
            "Use of NullPointerException Catch to Detect NULL Pointer Dereference",
            "Deployment of Wrong Handler",
            "Missing Handler",
            "Use of Function with Inconsistent Implementations",
            "Undefined Behavior for Input to API",
            "Use of Obsolete Function",
            "Exposed Dangerous Method or Function",
            "Improper Control of Generation of Code ('Code Injection')"
          ],
          "Code lines": [
            "\"directus\",",
            "\"realtime\",",
            "\"database\",",
            "\"content\",",
            "\"api\",",
            "\"rest\",",
            "\"graphql\",",
            "\"app\",",
            "\"dashboard\",",
            "\"headless\",",
            "\"cms\",",
            "\"mysql\",",
            "\"postgresql\",",
            "\"sqlite\",",
            "\"framework\",",
            "\"vue\"",
            "],",
            "\"type\": \"git\",",
            "\"url\": \"git+https://github.com/directus/directus.git\"",
            "},",
            "\"url\": \"https://github.com/directus/directus/issues\"",
            "},",
            "\"author\": {",
            "\"directus\": \"cli.js\"",
            "},",
            "\"start\": \"npx directus start\",",
            "\"prebuild\": \"npm run cleanup\",",
            "\"build\": \"tsc --build && copyfiles \\\"src/**/*.*\\\" -e \\\"src/**/*.ts\\\" -u 1 dist\",",
            "\"cleanup\": \"rimraf dist\",",
            "\"dev\": \"cross-env NODE_ENV=development SERVE_APP=false ts-node-dev --files --transpile-only --respawn --watch \\\".env\\\" --inspect=0 --exit-child -- src/start.ts\",",
            "\"cli\": \"cross-env NODE_ENV=development SERVE_APP=false ts-node --script-mode --transpile-only src/cli/run.ts\",",
            "\"test\": \"jest --coverage\",",
            "\"test:watch\": \"jest --watchAll\"",
            "},",
            "\"@aws-sdk/client-ses\": \"^3.40.0\",",
            "\"@directus/app\": \"9.4.1\",",
            "\"@directus/drive\": \"9.4.1\",",
            "\"@directus/drive-azure\": \"9.4.1\",",
            "\"@directus/drive-gcs\": \"9.4.1\",",
            "\"@directus/drive-s3\": \"9.4.1\",",
            "\"@directus/extensions-sdk\": \"9.4.1\",",
            "\"@directus/format-title\": \"9.4.1\",",
            "\"@directus/schema\": \"9.4.1\",",
            "\"@directus/shared\": \"9.4.1\",",
            "\"@directus/specs\": \"9.4.1\",",
            "\"@godaddy/terminus\": \"^4.9.0\",",
            "\"@rollup/plugin-alias\": \"^3.1.2\",",
            "\"@rollup/plugin-virtual\": \"^2.0.3\",",
            "\"argon2\": \"^0.28.2\",",
            "\"async\": \"^3.2.0\",",
            "\"async-mutex\": \"^0.3.1\",",
            "\"atob\": \"^2.1.2\",",
            "\"axios\": \"^0.24.0\",",
            "\"busboy\": \"^0.3.1\",",
            "\"camelcase\": \"^6.2.0\",",
            "\"chalk\": \"^4.1.1\",",
            "\"commander\": \"^8.0.0\",",
            "\"cookie-parser\": \"^1.4.5\",",
            "\"cors\": \"^2.8.5\",",
            "\"csv-parser\": \"^3.0.0\",",
            "\"date-fns\": \"^2.22.1\",",
            "\"deep-diff\": \"^1.0.2\",",
            "\"deep-map\": \"^2.0.0\",",
            "\"destroy\": \"^1.0.4\",",
            "\"dotenv\": \"^10.0.0\",",
            "\"eventemitter2\": \"^6.4.3\",",
            "\"execa\": \"^5.1.1\",",
            "\"exifr\": \"^7.1.2\",",
            "\"express\": \"^4.17.1\",",
            "\"flat\": \"^5.0.2\",",
            "\"fs-extra\": \"^10.0.0\",",
            "\"graphql\": \"^15.5.0\",",
            "\"graphql-compose\": \"^9.0.1\",",
            "\"inquirer\": \"^8.1.1\",",
            "\"joi\": \"^17.3.0\",",
            "\"js-yaml\": \"^4.1.0\",",
            "\"js2xmlparser\": \"^4.0.1\",",
            "\"json2csv\": \"^5.0.3\",",
            "\"jsonwebtoken\": \"^8.5.1\",",
            "\"keyv\": \"^4.0.3\",",
            "\"knex\": \"^0.95.11\",",
            "\"knex-schema-inspector\": \"1.6.6\",",
            "\"ldapjs\": \"^2.3.1\",",
            "\"liquidjs\": \"^9.25.0\",",
            "\"lodash\": \"^4.17.21\",",
            "\"macos-release\": \"^2.4.1\",",
            "\"marked\": \"^4.0.3\",",
            "\"mime-types\": \"^2.1.31\",",
            "\"ms\": \"^2.1.3\",",
            "\"nanoid\": \"^3.1.23\",",
            "\"node-cron\": \"^3.0.0\",",
            "\"node-machine-id\": \"^1.1.12\",",
            "\"nodemailer\": \"^6.6.1\",",
            "\"object-hash\": \"^2.2.0\",",
            "\"openapi3-ts\": \"^2.0.0\",",
            "\"openid-client\": \"^5.0.0\",",
            "\"ora\": \"^5.4.0\",",
            "\"otplib\": \"^12.0.1\",",
            "\"pino\": \"6.13.3\",",
            "\"pino-colada\": \"^2.1.0\",",
            "\"pino-http\": \"5.8.0\",",
            "\"qs\": \"^6.9.4\",",
            "\"rate-limiter-flexible\": \"^2.2.2\",",
            "\"resolve-cwd\": \"^3.0.0\",",
            "\"rollup\": \"^2.52.1\",",
            "\"sanitize-html\": \"^2.6.0\",",
            "\"sharp\": \"^0.29.0\",",
            "\"stream-json\": \"^1.7.1\",",
            "\"supertest\": \"^6.1.6\",",
            "\"update-check\": \"^1.5.4\",",
            "\"uuid\": \"^8.3.2\",",
            "\"uuid-validate\": \"0.0.3\",",
            "\"wellknown\": \"^0.5.0\"",
            "},",
            "\"@keyv/redis\": \"^2.1.2\",",
            "\"connect-memcached\": \"^1.0.0\",",
            "\"connect-redis\": \"^6.0.0\",",
            "\"connect-session-knex\": \"^2.1.0\",",
            "\"ioredis\": \"^4.27.6\",",
            "\"keyv-memcache\": \"^1.2.5\",",
            "\"memcached\": \"^2.2.2\",",
            "\"mysql\": \"^2.18.1\",",
            "\"nodemailer-mailgun-transport\": \"^2.1.3\",",
            "\"pg\": \"^8.6.0\",",
            "\"sqlite3\": \"^5.0.2\",",
            "\"tedious\": \"^13.0.0\"",
            "},",
            "\"devDependencies\": {",
            "\"@types/async\": \"3.2.10\",",
            "\"@types/atob\": \"2.1.2\",",
            "\"@types/body-parser\": \"1.19.2\",",
            "\"@types/busboy\": \"0.3.1\",",
            "\"@types/cookie-parser\": \"1.4.2\",",
            "\"@types/cors\": \"2.8.12\",",
            "\"@types/deep-diff\": \"1.0.1\",",
            "\"@types/destroy\": \"1.0.0\",",
            "\"@types/express\": \"4.17.13\",",
            "\"@types/express-pino-logger\": \"4.0.3\",",
            "\"@types/express-session\": \"1.17.4\",",
            "\"@types/flat\": \"5.0.2\",",
            "\"@types/fs-extra\": \"9.0.13\",",
            "\"@types/inquirer\": \"8.1.3\",",
            "\"@types/jest\": \"27.0.3\",",
            "\"@types/js-yaml\": \"4.0.5\",",
            "\"@types/json2csv\": \"5.0.3\",",
            "\"@types/jsonwebtoken\": \"8.5.6\",",
            "\"@types/keyv\": \"3.1.3\",",
            "\"@types/ldapjs\": \"2.2.2\",",
            "\"@types/lodash\": \"4.14.177\",",
            "\"@types/mime-types\": \"2.1.1\",",
            "\"@types/ms\": \"0.7.31\",",
            "\"@types/node\": \"16.11.9\",",
            "\"@types/node-cron\": \"2.0.5\",",
            "\"@types/nodemailer\": \"6.4.4\",",
            "\"@types/object-hash\": \"2.2.1\",",
            "\"@types/qs\": \"6.9.7\",",
            "\"@types/sanitize-html\": \"2.5.0\",",
            "\"@types/sharp\": \"0.29.4\",",
            "\"@types/stream-json\": \"1.7.1\",",
            "\"@types/supertest\": \"2.0.11\",",
            "\"@types/uuid\": \"8.3.3\",",
            "\"@types/uuid-validate\": \"0.0.1\",",
            "\"@types/wellknown\": \"0.5.1\",",
            "\"copyfiles\": \"2.4.1\",",
            "\"cross-env\": \"7.0.3\",",
            "\"jest\": \"27.3.1\",",
            "\"knex-mock-client\": \"1.6.1\",",
            "\"ts-jest\": \"27.0.7\",",
            "\"ts-node-dev\": \"1.1.8\",",
            "\"typescript\": \"4.5.2\"",
            "}"
          ]
        },
        "scan_response": {
          "vuln_score": 3,
          "exploitable_vuln": false,
          "description": "The code contains a potential issue with the use of the 'mysql' package (line: \"mysql\": \"^2.18.1\",) which is known to have vulnerabilities related to SQL injection if not used properly. However, without explicit usage examples in the provided code, this cannot be classified as an exploitable vulnerability. It is advisable to ensure that any SQL queries made using this package are parameterized to prevent SQL injection attacks."
        }
      },
      {
        "code_block": {
          "Primary Functional Area": "API and Functionality Management",
          "Sub Functional Area": "Type Handling",
          "Example issues to look for": [
            "Off-by-one Error",
            "Improper Handling of Unexpected Data Type",
            "Insufficient Type Distinction",
            "Access of Resource Using Incompatible Type ('Type Confusion')",
            "Improper Control of Dynamically-Identified Variables"
          ],
          "Code lines": [
            "\"exports\": {",
            "\".\": \"./dist/index.js\",",
            "\"./*\": \"./dist/*.js\",",
            "\"./package.json\": \"./package.json\"",
            "},",
            "\"node\": \">=12.20.0\"",
            "},"
          ]
        },
        "scan_response": {
          "vuln_score": 3,
          "exploitable_vuln": false,
          "description": "The provided code snippet appears to be part of a configuration file (likely a package.json or similar) that exports module paths. While there are no explicit vulnerabilities present in the code lines shown, there is a potential risk associated with improper handling of unexpected data types when dynamically resolving module paths. If the paths are not validated or sanitized before being used, it could lead to issues such as loading unintended modules or files. This could be exploited if an attacker can manipulate the input to the module resolution process. To mitigate this risk, ensure that any paths used in the exports are validated against a whitelist of expected values."
        }
      },
      {
        "code_block": {
          "Primary Functional Area": "API and Functionality Management",
          "Sub Functional Area": "Initialization and Cleanup",
          "Example issues to look for": [
            "Initialization of a Resource with an Insecure Default",
            "Non-exit on Failed Initialization"
          ],
          "Code lines": [
            "validateEnv(['KEY', 'SECRET']);",
            "if (!new Url(env.PUBLIC_URL).isAbsolute()) {",
            "logger.warn('PUBLIC_URL should be a full URL');",
            "}",
            "await validateDatabaseConnection();",
            "await validateDatabaseExtensions();",
            "if ((await isInstalled()) === false) {",
            "logger.error(`Database doesn't have Directus tables installed.`);",
            "process.exit(1);",
            "}",
            "logger.warn(`Database migrations have not all been run`);",
            "}",
            "await registerAuthProviders();",
            "const extensionManager = getExtensionManager();",
            "await extensionManager.initialize();",
            "const app = express();",
            "app.disable('x-powered-by');",
            "app.set('trust proxy', env.IP_TRUST_PROXY);",
            "app.set('query parser', (str: string) => qs.parse(str, { depth: 10 }));",
            "await emitter.emitInit('app.before', { app });",
            "await emitter.emitInit('middlewares.before', { app });",
            "app.use(expressLogger);",
            "app.use(errorHandler);",
            "await emitter.emitInit('routes.after', { app });",
            "track('serverStarted');",
            "await emitter.emitInit('app.after', { app });",
            "return app;",
            "}"
          ]
        },
        "scan_response": {
          "vuln_score": 6,
          "exploitable_vuln": true,
          "description": "The code checks if the database is installed and logs an error if not, but it does not handle the case where the database connection fails before this check. If the database connection fails, the application may continue running without a valid connection, leading to potential data exposure or application instability. To mitigate this, ensure that the database connection is validated before proceeding with further initialization steps."
        }
      },
      {
        "code_block": {
          "Primary Functional Area": "API and Functionality Management",
          "Sub Functional Area": "Data / Function Handling",
          "Example issues to look for": [
            "Invokable Control Element with Excessive File or Data Access Operations",
            "Reliance on Runtime Component in Generated Code",
            "Use of Inherently Dangerous Function",
            "Symbolic Name not Mapping to Correct Object",
            "Use of NullPointerException Catch to Detect NULL Pointer Dereference",
            "Deployment of Wrong Handler",
            "Missing Handler",
            "Use of Function with Inconsistent Implementations",
            "Undefined Behavior for Input to API",
            "Use of Obsolete Function",
            "Exposed Dangerous Method or Function",
            "Improper Control of Generation of Code ('Code Injection')"
          ],
          "Code lines": [
            "app.use((req, res, next) => {",
            "(",
            "express.json({",
            "limit: env.MAX_PAYLOAD_SIZE,",
            "}) as RequestHandler",
            ")(req, res, (err: any) => {",
            "if (err) {",
            "return next(new InvalidPayloadException(err.message));",
            "}",
            "return next();",
            "});",
            "});",
            "app.use(cookieParser());",
            "app.use(extractToken);",
            "app.use((_req, res, next) => {",
            "res.setHeader('X-Powered-By', 'Directus');",
            "next();",
            "});",
            "app.use(cors);",
            "}",
            "if (env.ROOT_REDIRECT) {",
            "res.redirect(env.ROOT_REDIRECT);",
            "} else {",
            "next();",
            "}",
            "});",
            "const adminPath = require.resolve('@directus/app');",
            "const adminUrl = new Url(env.PUBLIC_URL).addPath('admin');",
            "// Set the App's base path according to the APIs public URL",
            "const htmlWithBase = html.replace(/<base \\/>/, `<base href=\"${adminUrl.toString({ rootRelative: true })}/\" />`);",
            "const noCacheIndexHtmlHandler = (_req: Request, res: Response) => {",
            "res.setHeader('Cache-Control', 'no-cache');",
            "res.send(htmlWithBase);",
            "};",
            "app.use('/admin', express.static(path.join(adminPath, '..')));",
            "app.use('/admin/*', noCacheIndexHtmlHandler);",
            "}",
            "app.use(checkIP);",
            "app.use(sanitizeQuery);",
            "app.use(cache);",
            "app.use(schema);",
            "app.use(getPermissions);",
            "await emitter.emitInit('middlewares.after', { app });",
            "app.use('/auth', authRouter);",
            "app.use('/graphql', graphqlRouter);",
            "app.use('/activity', activityRouter);",
            "app.use('/assets', assetsRouter);",
            "app.use('/collections', collectionsRouter);",
            "app.use('/dashboards', dashboardsRouter);",
            "app.use('/extensions', extensionsRouter);",
            "app.use('/fields', fieldsRouter);",
            "app.use('/files', filesRouter);",
            "app.use('/folders', foldersRouter);",
            "app.use('/items', itemsRouter);",
            "app.use('/notifications', notificationsRouter);",
            "app.use('/panels', panelsRouter);",
            "app.use('/permissions', permissionsRouter);",
            "app.use('/presets', presetsRouter);",
            "app.use('/relations', relationsRouter);",
            "app.use('/revisions', revisionsRouter);",
            "app.use('/roles', rolesRouter);",
            "app.use('/server', serverRouter);",
            "app.use('/settings', settingsRouter);",
            "app.use('/shares', sharesRouter);",
            "app.use('/users', usersRouter);",
            "app.use('/utils', utilsRouter);",
            "app.use('/webhooks', webhooksRouter);",
            "// Register custom endpoints",
            "app.use(extensionManager.getEndpointRouter());",
            "await emitter.emitInit('routes.custom.after', { app });",
            "app.use(notFoundHandler);"
          ]
        },
        "scan_response": {
          "vuln_score": 6,
          "exploitable_vuln": true,
          "description": "The code uses `express.json()` with a configurable payload size limit (`env.MAX_PAYLOAD_SIZE`). If this limit is not properly set or validated, it could lead to denial of service (DoS) attacks through large payloads. Additionally, if the application does not handle payload size errors effectively, it could expose the application to further vulnerabilities. Mitigation strategies include validating the `MAX_PAYLOAD_SIZE` value and implementing rate limiting to prevent abuse."
        }
      },
      {
        "code_block": {
          "Primary Functional Area": "Concurrency and Resource Management",
          "Sub Functional Area": "Resource Management",
          "Example issues to look for": [
            "Excessive Platform Resource Consumption within a Loop",
            "Multiple Releases of Same Resource or Handle",
            "Insufficient Resource Pool",
            "Incomplete Cleanup",
            "Deletion of Data Structure Sentinel",
            "Addition of Data Structure Sentinel",
            "Multiple Binds to the Same Port",
            "Use of Multiple Resources with Duplicate Identifier",
            "Allocation of Resources Without Limits or Throttling",
            "Missing Reference to Active Allocated Resource",
            "Missing Release of Resource after Effective Lifetime",
            "Premature Release of Resource During Expected Lifetime",
            "Use of Uninitialized Resource",
            "Missing Initialization of Resource",
            "Use of Expired File Descriptor",
            "Improper Restriction of Power Consumption"
          ],
          "Code lines": [
            "if (env.RATE_LIMITER_ENABLED === true) {",
            "app.use(rateLimiter);",
            "}"
          ]
        },
        "scan_response": {
          "vuln_score": 6,
          "exploitable_vuln": true,
          "description": "The code snippet indicates the use of a rate limiter, but it lacks any configuration or limits on the rate limiting itself. This could lead to excessive resource consumption if the rate limiter is not properly configured, potentially allowing for denial of service (DoS) attacks. The absence of explicit limits means that the application could be overwhelmed by requests, leading to performance degradation or service unavailability. To mitigate this risk, ensure that the rate limiter is configured with appropriate limits to control the number of requests allowed within a specified timeframe."
        }
      }
    ]
  }
]